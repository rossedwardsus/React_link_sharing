[{"/Users/mac/Downloads/Projects/Project_links/web/web/src/App.tsx":"1","/Users/mac/Downloads/Projects/Project_links/web/web/src/index.tsx":"2","/Users/mac/Downloads/Projects/Project_links/web/web/src/reducers/rootReducer.ts":"3","/Users/mac/Downloads/Projects/Project_links/web/web/src/reducers/userReducer.ts":"4","/Users/mac/Downloads/Projects/Project_links/web/web/src/Home.tsx":"5","/Users/mac/Downloads/Projects/Project_links/web/web/src/Create_project.tsx":"6","/Users/mac/Downloads/Projects/Project_links/web/web/src/Project.tsx":"7","/Users/mac/Downloads/Projects/Project_links/web/web/src/reducers/projectsReducer.ts":"8","/Users/mac/Downloads/Projects/Project_links/web/web/src/actions/projects.ts":"9","/Users/mac/Downloads/Projects/Project_links/web/web/src/reportWebVitals.ts":"10","/Users/mac/Downloads/Projects/Project_links/web/web/src/store.ts":"11","/Users/mac/Downloads/Projects/Project_links/web/web/src/Projects.tsx":"12","/Users/mac/Downloads/Projects/Project_links/web/web/src/reducers/linksReducer.ts":"13","/Users/mac/Downloads/Projects/Project_links/web/web/src/AddLink.tsx":"14","/Users/mac/Downloads/Projects/Project_links/web/web/src/Components/Links/LinkComponent.tsx":"15","/Users/mac/Downloads/Projects/Project_links/web/web/src/Components/Links/Links.tsx":"16","/Users/mac/Downloads/Projects/Project_links/web/web/src/actions/links.ts":"17"},{"size":3429,"mtime":1622221620376,"results":"18","hashOfConfig":"19"},{"size":1238,"mtime":1622170891906,"results":"20","hashOfConfig":"19"},{"size":480,"mtime":1622169400282,"results":"21","hashOfConfig":"19"},{"size":3254,"mtime":1609038783321,"results":"22","hashOfConfig":"19"},{"size":347,"mtime":1610851593856,"results":"23","hashOfConfig":"19"},{"size":2790,"mtime":1622056456656,"results":"24","hashOfConfig":"19"},{"size":5874,"mtime":1622156468277,"results":"25","hashOfConfig":"19"},{"size":1742,"mtime":1622140735693,"results":"26","hashOfConfig":"19"},{"size":2095,"mtime":1622140705561,"results":"27","hashOfConfig":"19"},{"size":425,"mtime":1610828827032,"results":"28","hashOfConfig":"19"},{"size":314,"mtime":1608304706601,"results":"29","hashOfConfig":"19"},{"size":5860,"mtime":1622171664436,"results":"30","hashOfConfig":"19"},{"size":2231,"mtime":1622654287566,"results":"31","hashOfConfig":"19"},{"size":5874,"mtime":1622159966602,"results":"32","hashOfConfig":"19"},{"size":7405,"mtime":1622654404432,"results":"33","hashOfConfig":"19"},{"size":9174,"mtime":1622653089381,"results":"34","hashOfConfig":"19"},{"size":2196,"mtime":1622347199808,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"gtj9e4",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Downloads/Projects/Project_links/web/web/src/App.tsx",["84","85","86","87","88","89","90","91","92"],"import React, { useEffect, useState } from 'react';\n\nimport { Switch, Route, Link, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Home from './Home';\nimport createProject from './Create_project';\nimport project from './Project';\nimport Projects from './Projects';\nimport Links from './Components/Links/Links';\nimport AddLink from './AddLink';\n\nimport Grid, {GridSpacing} from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n\n  const projects = useSelector((state: any) => state.projects.projects);\n  const [spacing, setSpacing] = React.useState(2);\n  const classes = useStyles();\n  //const userBusinessPlans = useSelector((state: any) => state.user.businessPlans)\n\n  return (\n    <div className={classes.root}>\n    <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Project Links\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n    </AppBar>\n    <Grid container spacing={2}>\n      <Grid item xs={2} lg={2}>\n        <br/>\n        <Button component={Link} to={'/user/links'}>Links</Button>\n        <br/>\n        <Button component={Link} to={'/user/links/new'}>New Link</Button>\n        <br/>\n        <br/>\n        <Button component={Link} to={'/user/projects'}>Projects</Button>\n        <br/>\n        <Button component={Link} to={'/user/projects/new'}>New Project</Button>\n        <br/>\n        <br/>\n        <List>\n          {projects.map((project: any) => {\n              return(\n                      <>\n                        <ListItem>\n                            <Link to={'/user/projects/' + project.projectId}>{project.projectName}link</Link> count\n                        </ListItem>\n                      </>\n              )\n          })}\n        </List>\n        <br/>\n      </Grid>\n      <Grid item xs={10} lg={10}>\n        <div>\n          \n          <Switch>\n           <Route exact path=\"/\" component={Home}/>\n           <Route exact path=\"/user/projects\" component={Projects}/>\n           <Route exact path=\"/user/projects/new\" component={createProject}/>\n           <Route exact path=\"/user/projects/:projectId\" component={project}/>\n           <Route exact path=\"/user/links\" component={Links}/>\n           <Route exact path=\"/user/links/new\" component={AddLink}/>\n          </Switch>\n        </div>\n      </Grid>\n    </Grid>\n    </div>\n  );\n}\n\nexport default App;\n\n",["93","94"],"/Users/mac/Downloads/Projects/Project_links/web/web/src/index.tsx",["95","96"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport Store from './store'\nimport {BrowserRouter as Router } from 'react-router-dom'\nimport history from \"./history\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst darkTheme = createMuiTheme({\n  //backgroundColor: \"#333333\",\n  //textColor: \"#000000\",\n  //primary: \"#77ccdd\"\n  overrides: {\n    MuiButton: {\n      root: {         \n      \tfontSize: 15,         \n      \tcolor: 'blue',   \n      \tbackgroundColor: 'white',\n      \tsize: \"small\"\n\n      } \n    },\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<MuiThemeProvider theme={darkTheme}>\n    <Router>\n\t    <Provider store={Store}>\n\t      <App />\n\t    </Provider>\n    </Router>\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/mac/Downloads/Projects/Project_links/web/web/src/reducers/rootReducer.ts",[],["97","98"],"/Users/mac/Downloads/Projects/Project_links/web/web/src/reducers/userReducer.ts",["99","100","101","102","103"],"const initialState = {\n  auth: {},\n  subscription: \"\",\n  activityLog: \"\",\n  api_status: \"\",\n  channels: [{id: 1, channelName: \"shoe reviews\", collaborators: {user: 1, role: \"\"}}],\n  tags: [],\n  daily_tasks:[]\n}\nconst userChannelsReducer = (state: any = initialState, action: any) => {\n    //alert(\"1\");\n\n    var temp_state: any;\n    var index = 0;\n\n    switch(action.type){\n        case \"CREATE_YOUTUBE_CHANNEL\":\n        \t//alert(\"nbp\");\n\t        //return {\n\t        //   user: \"action.payload\"\n\t        //}\n\n            //if template == \"saas\"\n\n\t        return {channels: [...state.channels, {id: action.payload.id, channelName: action.payload.channelName, about: action.payload.about}]}\n        case \"SAVE_CHANNEL\":\n            //alert(\"nbp\");\n            //return {\n            //   user: \"action.payload\"\n            //}\n\n            //if template == \"saas\"\n\n            console.log(action.payload.id);\n\n            var temp_channels = [...state.channels];\n            let index = temp_channels.findIndex((channel: any) => channel.id == 1);\n            temp_channels[index] = {id: action.payload.id, channelName: action.payload.channelName, channelAbout: action.payload.channelAbout, type: \"type\"};\n        \n            return {channels: [temp_channels]}\n        \n        case \"ADD_TAG\":\n            //alert(\"nbp\");\n            //return {\n            //   user: \"action.payload\"\n            //}\n\n            return [...state.tags, action.payload.tag]\n\n        case \"SAVE_CHANNEL_NOTE\":\n            //alert(\"nbp\");\n            //return {\n            //   user: \"action.payload\"\n            //}\n\n            //temp state\n            temp_state = state;\n            //find plan\n            index = temp_state.channels.findIndex((channel: any) =>  channel.id == parseInt(action.payload.id));\n            temp_state.channels[index][\"notes\"] = action.payload.note;\n            //console.log(JSON.stringify(temp_state));\n  \n            //set marketing value\n\n            return {...temp_state};\n            //return [{businessPlans: [{id: 1, \"marketing\":\"marketing11111\"}]}];\n\n\n        case \"ADD_EPISODE\":\n            //alert(\"nbp\");\n            //return {\n            //   user: \"action.payload\"\n            //}\n\n            //temp state\n            temp_state = state;\n            //find plan\n            index = temp_state.channels.findIndex((channel: any) =>  channel.id == parseInt(action.payload.id));\n            var episodes = temp_state.channels[index];\n            episodes.push({episode_id: 1});\n            temp_state.channels[index][\"episodes\"] = episodes;\n  \n            //set marketing value\n\n            return {...temp_state};\n\n\n        case \"SAVE_TEAM\":\n            //alert(\"nbp\");\n            //return {\n            //   user: \"action.payload\"\n            //}\n\n            //temp state\n            temp_state = state;\n            //find plan\n            index = temp_state.businessPlans.findIndex((businessPlans: any) =>  businessPlans.id == parseInt(action.payload.id));\n            temp_state.businessPlans[index][\"team\"] = action.payload.teamValue;\n  \n            //set marketing value\n\n            return {...temp_state};\n        \n        \n        \n        default:\n            return state\n    }\n}\nexport default userChannelsReducer;",["104","105"],"/Users/mac/Downloads/Projects/Project_links/web/web/src/Home.tsx",[],["106","107"],"/Users/mac/Downloads/Projects/Project_links/web/web/src/Create_project.tsx",["108","109","110","111","112","113","114","115","116","117","118"],"import React, { useState } from 'react';\n\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport Grid, {GridSpacing} from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport { createProjectAction } from './actions/projects';\n\nimport { useForm, useFormContext, Controller } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  linkName: yup.string().required(),\n  linkDescription: yup.string().required(),\n  link: yup.string().required(),\n  //age: yup.number().positive().integer().required(),\n});\n\n\nfunction CreateProject() {\n\n  const projects = useSelector((state: any) => state.projects);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [projectName, setProjectName] = useState(\"\");\n  //const { control } = useFormContext();\n  //const { register, formState: { errors }, handleSubmit } = useForm();\n\n  const { register, handleSubmit, formState:{ errors } } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n\n  const onProjectNameChange = (e: any) => {\n\n      setProjectName(e.target.value);\n\n  }\n\n  const createProjectClicked = () => {\n\n    dispatch(createProjectAction(1, projectName));\n\n    //history.push(\"/projects/1\");\n\n  }\n\n  const onSubmit = (data: any) => {\n    console.log(JSON.stringify(data));\n\n    dispatch(createProjectAction(1, data.projectName));\n\n    //history.push(\"/projects/1\");\n  }\n\n  return (\n    <div className=\"App\">\n         <br/>\n        <br/>\n        {JSON.stringify(projects)}\n        <br/>\n        Create Project\n        <br/>\n        <br/>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <br/>\n          <input {...register(\"projectName\", { required: true, maxLength: 20 })} />\n          <br/>\n          {errors.projectName?.type === 'required' && \"First name is required\"}\n          <br/>\n          <input type=\"submit\" />\n        </form>\n        <br/>\n        <br/>\n        <br/>\n        <TextField\n            id=\"outlined-textarea\"\n            label=\"Project Name\"\n            placeholder=\"Placeholder\"\n            fullWidth\n            value={projectName}\n            variant=\"outlined\"\n            onChange={onProjectNameChange}\n          />\n        <br/>\n        <Button onClick={createProjectClicked}>Create Project</Button>\n\n    </div>\n  );\n}\n\nexport default CreateProject;\n","/Users/mac/Downloads/Projects/Project_links/web/web/src/Project.tsx",["119","120","121","122","123","124","125","126","127","128","129","130"],"import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router';\n\n\nimport { Link } from 'react-router-dom';\nimport Grid, {GridSpacing} from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from \"@material-ui/core/Input\";\nimport Paper from '@material-ui/core/Paper';\n\nimport { useForm, useFormContext, Controller } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport styled from \"styled-components\";\n\nimport moment from 'moment';\n\nimport { addProjectLinkAction } from './actions/projects';\n\nconst schema = yup.object().shape({\n  //linkName: yup.string().required(),\n  //linkName1: yup.string().required(),\n  //linkDescription: yup.string().required(),\n  //linkDescription1: yup.string().required(),\n  //link: yup.string().required(),\n  //link1: yup.string().required(),\n  //age: yup.number().positive().integer().required(),\n});\n\nconst SCInput = styled.input``\n\nfunction Project() {\n\n  const { projectId } = useParams<any>();\n  const projects = useSelector((state: any) => state.projects.projects);\n  const index = projects.findIndex((project: any) => project.projectId == parseInt(projectId));\n  const project = projects[index];\n  \n  const state = useSelector((state: any) => state);\n  const [projectLink, setProjectLink] = useState(\"\");\n  const [newProjectLink, setNewProjectLink]= useState(\"\");\n  const dispatch = useDispatch();\n\n  //const { register, formState: { errors }, handleSubmit } = useForm();\n  const { control, register, handleSubmit, formState:{ errors } } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  \n  //filter by project id\n\n  const onProjectLinkChange = (e: any) => {\n\n  \t\tsetProjectLink(e.target.value);\n\n  }\n\n  const addProjectLink = () => {\n\n  \t\t//dispatch(addProjectLinkAction(projectId, projectLink));\n\n  }\n\n  const onSubmit = (data: any) => {\n    console.log(JSON.stringify(data));\n\n    //link, name, description\n\n    dispatch(addProjectLinkAction(projectId, data.linkName1, data.linkDescription1, data.link1));\n\n    //history.push(\"/projects/1\");\n  }\n\n\n  return (\n    <div style={{textAlign: \"left\"}}>\n      <header>\n      \t<br/>\n        Project Name{JSON.stringify(project.projectName)}\n        <br/>\n        {JSON.stringify(project)}\n        <br/>\n        sort by domains/date added\n        <br/>\n        {projects[0].projectLinks.map((link: any) => \n        \t<>\n            <Paper>\n              <Typography>\n                name {link.linkName}\n              </Typography>\n              <br/>\n              <Typography>\n                description {link.linkDescription}\n              </Typography>\n              <br/>\n              <Link to={link.link} target=\"_blank\">{link.linkName}</Link>\n              <br/>\n              <Typography>\n                date added{moment().format()}\n              </Typography>\n              <br/>\n              edit\n              <br/>\n            </Paper>\n            <br/>\n          </>\n        )}\n        <br/>\n        <br/>\n        Add project link\n        <br/>\n        Link name\n        <br/>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <br/>\n          <Controller\n            name=\"scinput\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <SCInput {...field} name=\"scinput\"/>}\n          />\n          <br/>\n          Category-teams\n          <br/>\n          Connect to another project\n          <br/>\n          <br/>\n          <Controller\n            name=\"linkName1\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <TextField placeholder=\"linkName1\" {...field} />}\n          />20 charcters max\n          <br/>\n          {errors.linkName1?.type === 'required' && \"Link name1 is required\"}\n          <br/>\n          <br/>\n          link description\n          <br/>\n          <Controller\n            name=\"linkDescription1\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <TextField fullWidth multiline {...field} /> }\n          />50 characters max\n          <br/>\n          {errors.linkName1?.type === 'required' && \"Link name1 is required\"}\n          <br/>\n          link\n          <br/>\n          <Controller\n            name=\"link\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <TextField multiline {...field} />}\n          />\n          <br/>\n          <br/>\n          name\n          <br/>\n          <input {...register(\"linkName\", { required: true, maxLength: 20 })} />\n          <br/>\n          {errors.linkName?.type === 'required' && \"Link name is required\"}\n          <br/>\n          description\n          <br/>\n          <input {...register(\"linkDescription\", { required: true, maxLength: 20 })} />\n          <br/>\n          link\n          <br/>\n          <input {...register(\"link\", { required: true, maxLength: 20 })} />\n          <br/>\n          {errors.linkName?.type === 'required' && \"First name is required\"}\n          <br/>\n          <Button type=\"submit\" >Add</Button>\n        </form>\n        <br/>\n        <br/>\n        <TextField\n          id=\"outlined-textarea\"\n          label=\"Link\"\n          placeholder=\"Placeholder\"\n          fullWidth\n          value={newProjectLink}\n          variant=\"outlined\"\n          onChange={onProjectLinkChange}\n        />\n        <br/>\n        <Button onClick={addProjectLink}>Add</Button>\n      </header>\n    </div>\n  );\n}\n\nexport default Project;\n","/Users/mac/Downloads/Projects/Project_links/web/web/src/reducers/projectsReducer.ts",["131","132","133"],"const initialState = {\n  auth: {},\n  projects: [{projectId: 1, projectName: \"pm\", projectLinks: [{linkName: \"hello\", linkDescription: \"hellothere\", link: \"linktosomething\"}]}]\n}\n\n\nconst projectsReducer = (state: any = initialState, action: any) => {\n    //alert(\"1\");\n\n    var temp_state: any;\n    var index = 0;\n\n    switch(action.type){\n        case \"CREATE_PROJECT\":\n        \t//alert(\"nbp\");\n\t        //return {\n\t        //   user: \"action.payload\"\n\t        //}\n\n            //if template == \"saas\"\n\n\t        return {projects: [...state.projects, {projectId: action.payload.projectId, projectName: action.payload.projectName, projectLinks: []}]}\n        case \"ADD_PROJECT_LINK\":\n\n            console.log(\"reducer\");\n            //alert(\"nbp\");\n            //return {\n            //   user: \"action.payload\"\n            //}\n\n            //if template == \"saas\"\n\n            console.log(action.payload.projectId);\n\n            var temp_projects = [...state.projects];\n            let index = temp_projects.findIndex((project: any) => project.projectId == 1);\n            var temp_projectLinks = temp_projects[index].projectLinks;\n            temp_projectLinks.push({linkName: action.payload.linkName, linkDescription: action.payload.linkDescription, link: action.payload.link, dateAdded:action.payload.dateAdded})\n            temp_projects[index].projectLinks = [...temp_projectLinks];\n        \n            return {projects: [...state.projects]}\n        \n        case \"ADD_TAG\":\n            //alert(\"nbp\");\n            //return {\n            //   user: \"action.payload\"\n            //}\n\n            return [...state.tags, action.payload.tag]\n        \n        \n        default:\n            return state\n    }\n}\nexport default projectsReducer;","/Users/mac/Downloads/Projects/Project_links/web/web/src/actions/projects.ts",[],"/Users/mac/Downloads/Projects/Project_links/web/web/src/reportWebVitals.ts",[],["134","135"],"/Users/mac/Downloads/Projects/Project_links/web/web/src/store.ts",["136"],"\nimport {createStore, applyMiddleware, Middleware } from 'redux'\nimport rootReducer from './reducers/rootReducer'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\n\nconst Store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default Store;","/Users/mac/Downloads/Projects/Project_links/web/web/src/Projects.tsx",["137","138","139","140","141","142","143","144","145","146","147","148","149"],"import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router';\n\n\nimport { Link } from 'react-router-dom';\nimport Grid, {GridSpacing} from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from \"@material-ui/core/Input\";\nimport Paper from '@material-ui/core/Paper';\n\nimport { useForm, useFormContext, Controller } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport styled from \"styled-components\";\n\nimport moment from 'moment';\n\nimport { addProjectLinkAction } from './actions/projects';\n\nconst schema = yup.object().shape({\n  //linkName: yup.string().required(),\n  //linkName1: yup.string().required(),\n  //linkDescription: yup.string().required(),\n  //linkDescription1: yup.string().required(),\n  //link: yup.string().required(),\n  //link1: yup.string().required(),\n  //age: yup.number().positive().integer().required(),\n});\n\nconst SCInput = styled.input``\n\nfunction Projects() {\n\n  const { projectId } = useParams<any>();\n  const projects = useSelector((state: any) => state.projects.projects);\n  const index = projects.findIndex((project: any) => project.projectId == parseInt(projectId));\n  const project = projects[index];\n  \n  //const state = useSelector((state: any) => state);\n  //const [projectLink, setProjectLink] = useState(\"\");\n  //const [newProjectLink, setNewProjectLink]= useState(\"\");\n  const dispatch = useDispatch();\n\n  //const { register, formState: { errors }, handleSubmit } = useForm();\n  const { control, register, handleSubmit, formState:{ errors } } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  \n  //filter by project id\n\n  const onProjectLinkChange = (e: any) => {\n\n  \t\t//setProjectLink(e.target.value);\n\n  }\n\n  const addProjectLink = () => {\n\n  \t\t//dispatch(addProjectLinkAction(projectId, projectLink));\n\n  }\n\n  const onSubmit = (data: any) => {\n    console.log(JSON.stringify(data));\n\n    //link, name, description\n\n    //dispatch(addProjectLinkAction(projectId, data.linkName1, data.linkDescription1, data.link1));\n\n    //history.push(\"/projects/1\");\n  }\n\n\n  return (\n    <div style={{textAlign: \"left\"}}>\n      <header>\n      \t<br/>\n        Projects\n        <br/>\n        <br/>\n        sort by domains/date added\n        <br/>\n        <br/>\n        {projects.map((project: any) => \n        \t<>\n            <Paper>\n              <Typography>\n                <Link to={\"/user/projects/\" + project.projectId} target=\"_blank\">{project.projectName}</Link>\n                <br/>\n                name {project.projectName}\n              </Typography>\n              <br/>\n              <Typography>\n                description {\"link.linkDescription\"}\n              </Typography>\n              <br/>\n              <Typography>\n                date added{moment().format()}\n              </Typography>\n              <br/>\n              edit\n              <br/>\n            </Paper>\n            <br/>\n          </>\n        )}\n        <br/>\n        <br/>\n        Add project link\n        <br/>\n        Link name\n        <br/>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <br/>\n          <Controller\n            name=\"scinput\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <SCInput {...field} name=\"scinput\"/>}\n          />\n          <br/>\n          Category-teams\n          <br/>\n          Connect to another project\n          <br/>\n          <br/>\n          <Controller\n            name=\"linkName1\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <TextField placeholder=\"linkName1\" {...field} />}\n          />20 charcters max\n          <br/>\n          {errors.linkName1?.type === 'required' && \"Link name1 is required\"}\n          <br/>\n          <br/>\n          link description\n          <br/>\n          <Controller\n            name=\"linkDescription1\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <TextField fullWidth multiline {...field} /> }\n          />50 characters max\n          <br/>\n          {errors.linkName1?.type === 'required' && \"Link name1 is required\"}\n          <br/>\n          link\n          <br/>\n          <Controller\n            name=\"link\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <TextField multiline {...field} />}\n          />\n          <br/>\n          <br/>\n          name\n          <br/>\n          <input {...register(\"linkName\", { required: true, maxLength: 20 })} />\n          <br/>\n          {errors.linkName?.type === 'required' && \"Link name is required\"}\n          <br/>\n          description\n          <br/>\n          <input {...register(\"linkDescription\", { required: true, maxLength: 20 })} />\n          <br/>\n          link\n          <br/>\n          <input {...register(\"link\", { required: true, maxLength: 20 })} />\n          <br/>\n          {errors.linkName?.type === 'required' && \"First name is required\"}\n          <br/>\n          <Button type=\"submit\" >Add</Button>\n        </form>\n        <br/>\n        <br/>\n        <TextField\n          id=\"outlined-textarea\"\n          label=\"Link\"\n          placeholder=\"Placeholder\"\n          fullWidth\n          value={\"newProjectLink\"}\n          variant=\"outlined\"\n          onChange={onProjectLinkChange}\n        />\n        <br/>\n        <Button onClick={addProjectLink}>Add</Button>\n      </header>\n    </div>\n  );\n}\n\nexport default Projects;\n","/Users/mac/Downloads/Projects/Project_links/web/web/src/reducers/linksReducer.ts",["150","151","152"],"/Users/mac/Downloads/Projects/Project_links/web/web/src/AddLink.tsx",["153","154","155","156","157","158","159","160","161","162","163","164"],"import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router';\n\n\nimport { Link } from 'react-router-dom';\nimport Grid, {GridSpacing} from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from \"@material-ui/core/Input\";\nimport Paper from '@material-ui/core/Paper';\n\nimport { useForm, useFormContext, Controller } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport styled from \"styled-components\";\n\nimport moment from 'moment';\n\nimport { addProjectLinkAction } from './actions/projects';\n\nconst schema = yup.object().shape({\n  //linkName: yup.string().required(),\n  //linkName1: yup.string().required(),\n  //linkDescription: yup.string().required(),\n  //linkDescription1: yup.string().required(),\n  //link: yup.string().required(),\n  //link1: yup.string().required(),\n  //age: yup.number().positive().integer().required(),\n});\n\nconst SCInput = styled.input``\n\nfunction AddLink() {\n\n  const { projectId } = useParams<any>();\n  const projects = useSelector((state: any) => state.projects.projects);\n  const index = projects.findIndex((project: any) => project.projectId == parseInt(projectId));\n  const project = projects[index];\n  \n  const state = useSelector((state: any) => state);\n  const [projectLink, setProjectLink] = useState(\"\");\n  const [newProjectLink, setNewProjectLink]= useState(\"\");\n  const dispatch = useDispatch();\n\n  //const { register, formState: { errors }, handleSubmit } = useForm();\n  const { control, register, handleSubmit, formState:{ errors } } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  \n  //filter by project id\n\n  const onProjectLinkChange = (e: any) => {\n\n  \t\tsetProjectLink(e.target.value);\n\n  }\n\n  const addProjectLink = () => {\n\n  \t\t//dispatch(addProjectLinkAction(projectId, projectLink));\n\n  }\n\n  const onSubmit = (data: any) => {\n    console.log(JSON.stringify(data));\n\n    //link, name, description\n\n    dispatch(addProjectLinkAction(projectId, data.linkName1, data.linkDescription1, data.link1));\n\n    //history.push(\"/projects/1\");\n  }\n\n\n  return (\n    <div style={{textAlign: \"left\"}}>\n      <header>\n      \t<br/>\n        Project Name{JSON.stringify(project.projectName)}\n        <br/>\n        {JSON.stringify(project)}\n        <br/>\n        sort by domains/date added\n        <br/>\n        {projects[0].projectLinks.map((link: any) => \n        \t<>\n            <Paper>\n              <Typography>\n                name {link.linkName}\n              </Typography>\n              <br/>\n              <Typography>\n                description {link.linkDescription}\n              </Typography>\n              <br/>\n              <Link to={link.link} target=\"_blank\">{link.linkName}</Link>\n              <br/>\n              <Typography>\n                date added{moment().format()}\n              </Typography>\n              <br/>\n              edit\n              <br/>\n            </Paper>\n            <br/>\n          </>\n        )}\n        <br/>\n        <br/>\n        Add project link\n        <br/>\n        Link name\n        <br/>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <br/>\n          <Controller\n            name=\"scinput\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <SCInput {...field} name=\"scinput\"/>}\n          />\n          <br/>\n          Category-teams\n          <br/>\n          Connect to another project\n          <br/>\n          <br/>\n          <Controller\n            name=\"linkName1\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <TextField placeholder=\"linkName1\" {...field} />}\n          />20 charcters max\n          <br/>\n          {errors.linkName1?.type === 'required' && \"Link name1 is required\"}\n          <br/>\n          <br/>\n          link description\n          <br/>\n          <Controller\n            name=\"linkDescription1\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <TextField fullWidth multiline {...field} /> }\n          />50 characters max\n          <br/>\n          {errors.linkName1?.type === 'required' && \"Link name1 is required\"}\n          <br/>\n          link\n          <br/>\n          <Controller\n            name=\"link\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => <TextField multiline {...field} />}\n          />\n          <br/>\n          <br/>\n          name\n          <br/>\n          <input {...register(\"linkName\", { required: true, maxLength: 20 })} />\n          <br/>\n          {errors.linkName?.type === 'required' && \"Link name is required\"}\n          <br/>\n          description\n          <br/>\n          <input {...register(\"linkDescription\", { required: true, maxLength: 20 })} />\n          <br/>\n          link\n          <br/>\n          <input {...register(\"link\", { required: true, maxLength: 20 })} />\n          <br/>\n          {errors.linkName?.type === 'required' && \"First name is required\"}\n          <br/>\n          <Button type=\"submit\" >Add</Button>\n        </form>\n        <br/>\n        <br/>\n        <TextField\n          id=\"outlined-textarea\"\n          label=\"Link\"\n          placeholder=\"Placeholder\"\n          fullWidth\n          value={newProjectLink}\n          variant=\"outlined\"\n          onChange={onProjectLinkChange}\n        />\n        <br/>\n        <Button onClick={addProjectLink}>Add</Button>\n      </header>\n    </div>\n  );\n}\n\nexport default AddLink;\n","/Users/mac/Downloads/Projects/Project_links/web/web/src/Components/Links/LinkComponent.tsx",["165","166","167","168","169","170","171","172","173","174","175","176"],"/Users/mac/Downloads/Projects/Project_links/web/web/src/Components/Links/Links.tsx",["177","178","179","180","181","182","183","184","185","186","187","188","189","190","191"],"/Users/mac/Downloads/Projects/Project_links/web/web/src/actions/links.ts",[],{"ruleId":"192","severity":1,"message":"193","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":26},{"ruleId":"192","severity":1,"message":"196","line":1,"column":28,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"197","line":3,"column":31,"nodeType":"194","messageId":"195","endLine":3,"endColumn":40},{"ruleId":"192","severity":1,"message":"198","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":21},{"ruleId":"192","severity":1,"message":"199","line":13,"column":15,"nodeType":"194","messageId":"195","endLine":13,"endColumn":26},{"ruleId":"192","severity":1,"message":"200","line":23,"column":8,"nodeType":"194","messageId":"195","endLine":23,"endColumn":20},{"ruleId":"192","severity":1,"message":"201","line":24,"column":8,"nodeType":"194","messageId":"195","endLine":24,"endColumn":20},{"ruleId":"192","severity":1,"message":"202","line":50,"column":10,"nodeType":"194","messageId":"195","endLine":50,"endColumn":17},{"ruleId":"192","severity":1,"message":"203","line":50,"column":19,"nodeType":"194","messageId":"195","endLine":50,"endColumn":29},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"192","severity":1,"message":"208","line":9,"column":8,"nodeType":"194","messageId":"195","endLine":9,"endColumn":15},{"ruleId":"192","severity":1,"message":"209","line":12,"column":8,"nodeType":"194","messageId":"195","endLine":12,"endColumn":19},{"ruleId":"204","replacedBy":"210"},{"ruleId":"206","replacedBy":"211"},{"ruleId":"192","severity":1,"message":"212","line":14,"column":9,"nodeType":"194","messageId":"195","endLine":14,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":37,"column":78,"nodeType":"215","messageId":"216","endLine":37,"endColumn":80},{"ruleId":"213","severity":1,"message":"214","line":59,"column":81,"nodeType":"215","messageId":"216","endLine":59,"endColumn":83},{"ruleId":"213","severity":1,"message":"214","line":78,"column":81,"nodeType":"215","messageId":"216","endLine":78,"endColumn":83},{"ruleId":"213","severity":1,"message":"214","line":97,"column":98,"nodeType":"215","messageId":"216","endLine":97,"endColumn":100},{"ruleId":"204","replacedBy":"217"},{"ruleId":"206","replacedBy":"218"},{"ruleId":"204","replacedBy":"219"},{"ruleId":"206","replacedBy":"220"},{"ruleId":"192","severity":1,"message":"221","line":6,"column":10,"nodeType":"194","messageId":"195","endLine":6,"endColumn":14},{"ruleId":"192","severity":1,"message":"222","line":7,"column":8,"nodeType":"194","messageId":"195","endLine":7,"endColumn":12},{"ruleId":"192","severity":1,"message":"199","line":7,"column":15,"nodeType":"194","messageId":"195","endLine":7,"endColumn":26},{"ruleId":"192","severity":1,"message":"223","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":18},{"ruleId":"192","severity":1,"message":"224","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":14},{"ruleId":"192","severity":1,"message":"225","line":12,"column":8,"nodeType":"194","messageId":"195","endLine":12,"endColumn":18},{"ruleId":"192","severity":1,"message":"226","line":13,"column":8,"nodeType":"194","messageId":"195","endLine":13,"endColumn":16},{"ruleId":"192","severity":1,"message":"227","line":14,"column":8,"nodeType":"194","messageId":"195","endLine":14,"endColumn":19},{"ruleId":"192","severity":1,"message":"228","line":18,"column":19,"nodeType":"194","messageId":"195","endLine":18,"endColumn":33},{"ruleId":"192","severity":1,"message":"229","line":18,"column":35,"nodeType":"194","messageId":"195","endLine":18,"endColumn":45},{"ruleId":"192","severity":1,"message":"230","line":34,"column":9,"nodeType":"194","messageId":"195","endLine":34,"endColumn":16},{"ruleId":"192","severity":1,"message":"222","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":12},{"ruleId":"192","severity":1,"message":"199","line":8,"column":15,"nodeType":"194","messageId":"195","endLine":8,"endColumn":26},{"ruleId":"192","severity":1,"message":"224","line":12,"column":8,"nodeType":"194","messageId":"195","endLine":12,"endColumn":14},{"ruleId":"192","severity":1,"message":"225","line":13,"column":8,"nodeType":"194","messageId":"195","endLine":13,"endColumn":18},{"ruleId":"192","severity":1,"message":"226","line":14,"column":8,"nodeType":"194","messageId":"195","endLine":14,"endColumn":16},{"ruleId":"192","severity":1,"message":"227","line":15,"column":8,"nodeType":"194","messageId":"195","endLine":15,"endColumn":19},{"ruleId":"192","severity":1,"message":"231","line":16,"column":8,"nodeType":"194","messageId":"195","endLine":16,"endColumn":13},{"ruleId":"192","severity":1,"message":"228","line":19,"column":19,"nodeType":"194","messageId":"195","endLine":19,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":44,"column":72,"nodeType":"215","messageId":"216","endLine":44,"endColumn":74},{"ruleId":"192","severity":1,"message":"232","line":47,"column":9,"nodeType":"194","messageId":"195","endLine":47,"endColumn":14},{"ruleId":"192","severity":1,"message":"233","line":48,"column":10,"nodeType":"194","messageId":"195","endLine":48,"endColumn":21},{"ruleId":"192","severity":1,"message":"234","line":49,"column":26,"nodeType":"194","messageId":"195","endLine":49,"endColumn":43},{"ruleId":"192","severity":1,"message":"235","line":10,"column":9,"nodeType":"194","messageId":"195","endLine":10,"endColumn":24},{"ruleId":"192","severity":1,"message":"212","line":11,"column":9,"nodeType":"194","messageId":"195","endLine":11,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":36,"column":85,"nodeType":"215","messageId":"216","endLine":36,"endColumn":87},{"ruleId":"204","replacedBy":"236"},{"ruleId":"206","replacedBy":"237"},{"ruleId":"192","severity":1,"message":"238","line":2,"column":39,"nodeType":"194","messageId":"195","endLine":2,"endColumn":49},{"ruleId":"192","severity":1,"message":"196","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"222","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":12},{"ruleId":"192","severity":1,"message":"199","line":8,"column":15,"nodeType":"194","messageId":"195","endLine":8,"endColumn":26},{"ruleId":"192","severity":1,"message":"224","line":12,"column":8,"nodeType":"194","messageId":"195","endLine":12,"endColumn":14},{"ruleId":"192","severity":1,"message":"225","line":13,"column":8,"nodeType":"194","messageId":"195","endLine":13,"endColumn":18},{"ruleId":"192","severity":1,"message":"226","line":14,"column":8,"nodeType":"194","messageId":"195","endLine":14,"endColumn":16},{"ruleId":"192","severity":1,"message":"227","line":15,"column":8,"nodeType":"194","messageId":"195","endLine":15,"endColumn":19},{"ruleId":"192","severity":1,"message":"231","line":16,"column":8,"nodeType":"194","messageId":"195","endLine":16,"endColumn":13},{"ruleId":"192","severity":1,"message":"228","line":19,"column":19,"nodeType":"194","messageId":"195","endLine":19,"endColumn":33},{"ruleId":"192","severity":1,"message":"239","line":26,"column":10,"nodeType":"194","messageId":"195","endLine":26,"endColumn":30},{"ruleId":"213","severity":1,"message":"214","line":44,"column":72,"nodeType":"215","messageId":"216","endLine":44,"endColumn":74},{"ruleId":"192","severity":1,"message":"240","line":45,"column":9,"nodeType":"194","messageId":"195","endLine":45,"endColumn":16},{"ruleId":"192","severity":1,"message":"241","line":50,"column":9,"nodeType":"194","messageId":"195","endLine":50,"endColumn":17},{"ruleId":"192","severity":1,"message":"235","line":12,"column":9,"nodeType":"194","messageId":"195","endLine":12,"endColumn":24},{"ruleId":"192","severity":1,"message":"212","line":13,"column":9,"nodeType":"194","messageId":"195","endLine":13,"endColumn":14},{"ruleId":"213","severity":1,"message":"214","line":40,"column":73,"nodeType":"215","messageId":"216","endLine":40,"endColumn":75},{"ruleId":"192","severity":1,"message":"222","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":12},{"ruleId":"192","severity":1,"message":"199","line":8,"column":15,"nodeType":"194","messageId":"195","endLine":8,"endColumn":26},{"ruleId":"192","severity":1,"message":"224","line":12,"column":8,"nodeType":"194","messageId":"195","endLine":12,"endColumn":14},{"ruleId":"192","severity":1,"message":"225","line":13,"column":8,"nodeType":"194","messageId":"195","endLine":13,"endColumn":18},{"ruleId":"192","severity":1,"message":"226","line":14,"column":8,"nodeType":"194","messageId":"195","endLine":14,"endColumn":16},{"ruleId":"192","severity":1,"message":"227","line":15,"column":8,"nodeType":"194","messageId":"195","endLine":15,"endColumn":19},{"ruleId":"192","severity":1,"message":"231","line":16,"column":8,"nodeType":"194","messageId":"195","endLine":16,"endColumn":13},{"ruleId":"192","severity":1,"message":"228","line":19,"column":19,"nodeType":"194","messageId":"195","endLine":19,"endColumn":33},{"ruleId":"213","severity":1,"message":"214","line":44,"column":72,"nodeType":"215","messageId":"216","endLine":44,"endColumn":74},{"ruleId":"192","severity":1,"message":"232","line":47,"column":9,"nodeType":"194","messageId":"195","endLine":47,"endColumn":14},{"ruleId":"192","severity":1,"message":"233","line":48,"column":10,"nodeType":"194","messageId":"195","endLine":48,"endColumn":21},{"ruleId":"192","severity":1,"message":"234","line":49,"column":26,"nodeType":"194","messageId":"195","endLine":49,"endColumn":43},{"ruleId":"192","severity":1,"message":"197","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":19},{"ruleId":"192","severity":1,"message":"222","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":12},{"ruleId":"192","severity":1,"message":"199","line":8,"column":15,"nodeType":"194","messageId":"195","endLine":8,"endColumn":26},{"ruleId":"192","severity":1,"message":"231","line":16,"column":8,"nodeType":"194","messageId":"195","endLine":16,"endColumn":13},{"ruleId":"192","severity":1,"message":"228","line":19,"column":19,"nodeType":"194","messageId":"195","endLine":19,"endColumn":33},{"ruleId":"192","severity":1,"message":"242","line":26,"column":10,"nodeType":"194","messageId":"195","endLine":26,"endColumn":23},{"ruleId":"192","severity":1,"message":"243","line":71,"column":10,"nodeType":"194","messageId":"195","endLine":71,"endColumn":27},{"ruleId":"192","severity":1,"message":"244","line":72,"column":10,"nodeType":"194","messageId":"195","endLine":72,"endColumn":16},{"ruleId":"192","severity":1,"message":"245","line":72,"column":18,"nodeType":"194","messageId":"195","endLine":72,"endColumn":27},{"ruleId":"213","severity":1,"message":"214","line":74,"column":64,"nodeType":"215","messageId":"216","endLine":74,"endColumn":66},{"ruleId":"192","severity":1,"message":"246","line":101,"column":9,"nodeType":"194","messageId":"195","endLine":101,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":108,"column":17,"nodeType":"215","messageId":"216","endLine":108,"endColumn":19},{"ruleId":"192","severity":1,"message":"247","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":19},{"ruleId":"192","severity":1,"message":"197","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":19},{"ruleId":"192","severity":1,"message":"222","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":12},{"ruleId":"192","severity":1,"message":"199","line":8,"column":15,"nodeType":"194","messageId":"195","endLine":8,"endColumn":26},{"ruleId":"192","severity":1,"message":"231","line":16,"column":8,"nodeType":"194","messageId":"195","endLine":16,"endColumn":13},{"ruleId":"192","severity":1,"message":"228","line":19,"column":19,"nodeType":"194","messageId":"195","endLine":19,"endColumn":33},{"ruleId":"192","severity":1,"message":"248","line":29,"column":25,"nodeType":"194","messageId":"195","endLine":29,"endColumn":41},{"ruleId":"192","severity":1,"message":"249","line":69,"column":10,"nodeType":"194","messageId":"195","endLine":69,"endColumn":26},{"ruleId":"192","severity":1,"message":"250","line":69,"column":28,"nodeType":"194","messageId":"195","endLine":69,"endColumn":47},{"ruleId":"192","severity":1,"message":"233","line":72,"column":10,"nodeType":"194","messageId":"195","endLine":72,"endColumn":21},{"ruleId":"192","severity":1,"message":"234","line":73,"column":26,"nodeType":"194","messageId":"195","endLine":73,"endColumn":43},{"ruleId":"213","severity":1,"message":"214","line":89,"column":18,"nodeType":"215","messageId":"216","endLine":89,"endColumn":20},{"ruleId":"213","severity":1,"message":"214","line":94,"column":24,"nodeType":"215","messageId":"216","endLine":94,"endColumn":26},{"ruleId":"251","severity":1,"message":"252","line":101,"column":6,"nodeType":"253","endLine":101,"endColumn":15,"suggestions":"254"},{"ruleId":"192","severity":1,"message":"246","line":142,"column":9,"nodeType":"194","messageId":"195","endLine":142,"endColumn":17},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useParams' is defined but never used.","'useDispatch' is defined but never used.","'GridSpacing' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'spacing' is assigned a value but never used.","'setSpacing' is assigned a value but never used.","no-native-reassign",["255"],"no-negated-in-lhs",["256"],"'history' is defined but never used.","'CssBaseline' is defined but never used.",["255"],["256"],"'index' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["255"],["256"],["255"],["256"],"'Link' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'useFormContext' is defined but never used.","'Controller' is defined but never used.","'history' is assigned a value but never used.","'Input' is defined but never used.","'state' is assigned a value but never used.","'projectLink' is assigned a value but never used.","'setNewProjectLink' is assigned a value but never used.","'temp_state' is defined but never used.",["255"],["256"],"'Middleware' is defined but never used.","'addProjectLinkAction' is defined but never used.","'project' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'addLinkAction' is defined but never used.","'selectedProjectId' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'setSortBy' is assigned a value but never used.","'hostname' is assigned a value but never used.","'FC' is defined but never used.","'updateLinkAction' is defined but never used.","'addLinkProjectId' is assigned a value but never used.","'setAddLinkProjectId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'links' and 'linksSorted'. Either include them or remove the dependency array.","ArrayExpression",["257"],"no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},"Update the dependencies array to be: [links, linksSorted, orderBy]",{"range":"260","text":"261"},[3133,3142],"[links, linksSorted, orderBy]"]